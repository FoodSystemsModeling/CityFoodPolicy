---
title: "My functions - Description"
format: html
editor: visual
---

The "general/myfunctions.R" document contains all of the functions I have written to be used in multiple contexts. In this document, I describe the functions to make them easier to use.

## Creating metadata

Create a list of variables that you would like to add to the metadata in "varlist".

Any variable that you not like to pivot longer is defined in cols_remove

Function name: meta_select_vars

To execute the code: m \<- meta_select_vars(df)

## Summary statistics with disclosure review data

This set of functions can be used to calculate summary statistics that include the summary stats of interest, the number of observations, and the top two largest observations. All in the format requested by NASS.

### Group by 1 and 1 data frame

The following set of functions is for analysis of one data frame grouped by one variable.

#### Total for one data frame grouped by one variable

Create a list of variables in "varlist" and define a variable in your data frame to group by called "groupbyvar".

The data frame should be in survey format and will be changed to just use the variables (i.e., df_srv\$variables) in the code, where weights are used manually. This works much faster than survey_total in the srvyr package.

This function allows you to get the totals for all variables in varlist grouped by one variable (groupbyvar) using one data frame. It provides the variable name, statistic, weighted and unweighted number of observations, and the top two observations.

Function name: summary_total

To execute the code: sum \<- summary_total(df)

#### Mean, se, median for one data frame, grouped by one variable

This function provides the mean, se, median, and weighted n for output, along with the unweighted n and top two observations for disclosure.

Create a list of variables in "varlist" and define a variable in your data frame to group by called "groupbyvar".

Function name: mean_se_median

To execute the code: sum \<- mean_se_median(df)

#### Weighted t-tests to compare groups with one data frame

The easist way to do a weighted t-test for many variables is with linear model.

Define "xvar" as the variable that defines the two groups you are comparing (e.g., xvar = "local_farms")

Define "yvar" as a vector of variables that you would like to t-test for the two groups (e.g., yvar = c("beginning", "young"))".

Define "df" as the dataframe you will be using.

This function will perform a ols model and will output the corresponding p-value for the b1 coefficient for each variable. It will not output any coefficients as then we will have to provide all model statistics for export review. Function binds all data into one data frame.

Function name: ttest_lm

To execute the code and map results into a table: results \<- map_dfr(yvar, \~ttest_lm(.x, df))

### Group by 2 variables and for one data frame

#### Total for one data frame grouped by two variables

Create a list of variables in "varlist" and define two variables in your data frame to group by called "groupbyvar", "groupbyvar2".

The data frame should be in survey format and will be changed to just use the variables (i.e., df_srv\$variables) in the code, where weights are used manually. This works much faster than survey_total in the srvyr package.

This function allows you to get the totals for all variables in varlist grouped by two variables (groupbyvar, gropubyvar2) using one data frame. It provides the variable name, statistic, weighted and unweighted number of observations, and the top two observations.

Function name: summary_total2

To execute the code: sum \<- summary_total2(df)

#### Mean, se, median for one data frame, grouped by two variables

This function provides the mean, se, median, and weighted n for output, along with the unweighted n and top two observations for disclosure.

Create a list of variables in "varlist" and define two variables in your data frame to group by called "groupbyvar" and "groupbyvar2".

Function name: mean_se_median2

To execute the code: sum \<- mean_se_median2(df)

### Group by 3 variables

#### Total for one data frame grouped by three variables

Create a list of variables in "varlist" and define two variables in your data frame to group by called "groupbyvar", "groupbyvar2", "groupbyvar3".

The data frame should be in survey format and will be changed to just use the variables (i.e., df_srv\$variables) in the code, where weights are used manually. This works much faster than survey_total in the srvyr package.

This function allows you to get the totals for all variables in varlist grouped by three variables (groupbyvar, gropubyvar2, groupbyvar3) using one data frame. It provides the variable name, statistic, weighted and unweighted number of observations, and the top two observations.

Function name: summary_total3

To execute the code: sum \<- summary_total3(df)



