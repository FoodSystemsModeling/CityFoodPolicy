---
  title: "Meat calculator"
output: word_document
---
  
  ```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)
```

# Data for meat calculator
We will get 2017 average cost of production data for those operations that produce only cattle, only hogs and pigs, only sheep and lambs, and only meat goats (combine the last two if needed for sample size). 

For each operation I will calculate the expense as a proportion of total expense. I will then get the average and standard deviation for each expense type. 

Ideally we would get average expense by commodity, scale and region/state. But, this is not possible due to sample size issues. So we need to figure out where the biggest differences in expense are and use those cross sections of the population. 

For those Western States with a large enough sample size, then we will use state. The specific states we want separately are Montana (30), Wyoming (56), Colorado (08), New Mexico (35) and New York (36).

Otherwise we will use census regions with Mountain and Pacific census divisions (i.e.,Pacific, Mountain West, Midwest, South, Northeast).   


## Import data and define variables

Variables are defined based on the total sales from each commodity is equal to  TVP - total value of products sold. 

* Cattle sales (k1339) + cattle production contract (k3308)
* Hogs and pigs sales (k821, this is a NASS calculated variable found in the prism code book). This is equivalent to...
* Gross value of Hog and pig sales (k1341) + Hog and pigs under production contract (k3309) 
* Sheep and lamb sales (4824, a NASS calculated variable)
* This is equivalent to k7034 in our sample (Total sheep and lamb sales, a NASS calculated variable, that also includes sales under production contract)
* Meat goat sales (k4851, a NASS variable in the prism codebook)
* This is equivalent to k7061, a NASS calculated variable that included sales under production contract

```{r}
library(tidyverse)
library(srvyr)

# Import 2017 data from "General" folder
load("P:/pr-usda-nass-jablonski-csu-coaarmslf/General/dataframes/coa_17_srv.RData")

# Create a dummy to define producers that produce  only cattle, only hogs and pigs, only sheep and lambs, and only meat goats. Data on sheep/lamb and goat sales under production contract is only collected through fill in the blank and not calculated by NASS, so we don't have the data.

coa_17 <- coa_17_srv$variables %>% mutate(
  all_cattle = ifelse((k1339 + k3308)> 0 & (k1339 + k3308)==tvp, 1, 0), 
  all_hogs_pigs = ifelse(k821>0 & k821==tvp, 1, 0), 
  all_sheep_lamb_goats = ifelse((k4824>0 & k4824==tvp) | 
                                  (k4851>0 & k4851==tvp), 1, 0),
  livestock_species = case_when(
    all_cattle==1 ~ "All cattle", 
    all_hogs_pigs==1 ~ "All hogs and pigs",
    all_sheep_lamb_goats==1 ~ "All sheep, lamb and goats"))

# Create a factor variable for type of hog and pig operation
coa_17 <- coa_17 %>% mutate(
  op_type_hogs_pigs = ifelse(
    all_hogs_pigs==1 & k1242==1, "Farrow to finish",
    ifelse(all_hogs_pigs==1 & k1243==1, "Finish only", NA)))

# Create meat regions, the same as census regions but with Pacific and Mountain separate rather than together as West
coa_17 <- coa_17 %>% mutate(
  meat_regions = case_when(
    census_divisions == "Pacific" ~ "Pacific", 
    census_divisions == "Mountain" ~ "Mountain", 
    census_regions=="Midwest" ~ "Midwest", 
    census_regions=="South" ~ "South", 
    census_regions=="Northeast" ~ "Northeast"),
  meat_regions = fct_relevel(
    meat_regions, "Pacific", "Mountain", "Midwest", "South", "Northeast"))
```


## Define our data frame for this analysis
Drop all observations with total value of production (TVP) less than $1,000 and 0 head sold as we are only interested in data for commercial operations. We further drop observations in the lowest and highest quantiles, based on head sold, in the subsequent analysis. 

Cattle is the only category where it's possible to be in the sample with zero head sold. 

```{r}
# Define our data frame as observations with TVP of at least $1,000 that sell at least one head per year through local food channels that are non-diversified operations of the species of interest 
meat <- coa_17 %>% filter(tvp>=1000 &
    ((all_cattle==1 & k810>0)| 
      all_hogs_pigs==1 | 
      all_sheep_lamb_goats==1 | 
      all_sheep_lamb_goats==1))

# Calculate the proportion of producers in our local sample sell through local channels only, no commodity sales. 
meat <- meat %>% mutate(
  local_only = ifelse(tvp==k4160 + k2752, 1, 0),
  percent_local = (k4160 + k2752)/tvp)

rm(coa_17, coa_17_srv)

```

## Define expense categories
We define expense categories based on the top variable expenses. We only want those expenses that account for at least 5% of total variable expense. 

```{r}

# Define expenses 
meat <- meat %>% mutate(
  fertcseedp = k1501 + k1502 + k1503,
  animalpurchase = k1504 + k1505, 
  feed = k1506, 
  fuelo = k1507, 
  util = k1508, 
  mainr = k1509, 
  labor = k1510 + k1511 + k1512,
  rent = k1513,
  lease = k1514 + k1517,
  rentlease = k1513 + k1514 + k1517,
  interest = k1515 + k1516,
  otherexp = k1518 + k1935,
  totexp = fertcseedp + animalpurchase + feed + fuelo + util + mainr + labor + rentlease + interest + otherexp)

# Define expense per head
# Done separately for each and then concatenated because I couldn't figure out the case_when statement
cattle <- meat %>% filter(all_cattle==1) %>% 
  mutate(across(fertcseedp:totexp, 
                .fns = list(head = ~./k810)))

hogs_pigs <- meat %>% filter(all_hogs_pigs==1) %>%
  mutate(across(fertcseedp:totexp,
                .fns = list(head = ~./k820)))

sheep_lamb_goats <- meat %>% filter(all_sheep_lamb_goats==1) %>%
  mutate(across(fertcseedp:totexp,
                .fns = list(head = ~./(k825 + k852))))

# bind rows back to one data frame
#meat <- bind_rows(cattle, hogs_pigs, sheep_lamb_goats)
meat <- bind_rows(cattle, hogs_pigs, sheep_lamb_goats)
rm(cattle, hogs_pigs, sheep_lamb_goats)

# add a head sold category that combines sheep, lamb and goats
meat <- meat %>% mutate(
  k825_k852 = k825 + k852)

# make survey object
meat <- meat %>% as_survey(weight = weight)

```

## Define scale categories
We use head sold to define scale categories. The small scale is less than 25th percentile, mid size is 25th-75th and large is 76th to 95th percentile. We don't include 95th plus due to outliers. 

```{r, eval=FALSE}

# Cattle
local_only_cattle <- meat$variables %>% filter(all_cattle==1 & local_only==1)

quantile(local_only_cattle$k810, c(0.25, 0.75, 0.95, .99), na.rm = TRUE)

# Hogs and pigs 
local_only_pigs <- meat$variables %>% filter(all_hogs_pigs==1 & local_only==1)

quantile(local_only_pigs$k820, c(0.25, 0.75, 0.95, .99), na.rm = TRUE)

# Sheep and lamb 
local_only_sheep_lamb_goats <- meat$variable %>% 
  filter(all_sheep_lamb_goats==1 & local_only==1)

quantile(local_only_sheep_lamb_goats$k825_k852, c(0.25, 0.75, 0.95, .99), na.rm = TRUE)

rm(local_only_cattle, local_only_pigs, local_only_sheep_lamb_goats)

```


```{r}
# Local only
# Define scale categories for each species
meat <- meat %>% mutate(
  cattle_scale = case_when(
    all_cattle==1 & k810<2 ~ "1 head sold",
    all_cattle==1 & k810>= 2 & k810<=8 ~ "2 to 8 head sold",
    all_cattle==1 & k810>8 & k810<=30 ~ "9 to 30 head sold"),
  cattle_scale = fct_relevel(cattle_scale,
                             "1 head sold", 
                             "2 to 8 head sold", 
                             "9 to 30 head sold"),
  
  hogs_pigs_scale = case_when(
    all_hogs_pigs==1 & k820<6 ~ "1 to 5 head sold",
    all_hogs_pigs==1 & k820>=6 & k820<=27 ~ "6 to 27 head sold", 
    all_hogs_pigs==1 &k820>27 & k820<=200 ~ "28 to 200 head sold"),
  hogs_pigs_scale = fct_relevel(hogs_pigs_scale,
                                "1 to 5 head sold",
                                "6 to 27 head sold",
                                "28 to 200 head sold"), 
  sheep_lamb_goats_scale = case_when(
    all_sheep_lamb_goats==1 & (k825_k852)<10 ~ "1 to 9 head sold",
    all_sheep_lamb_goats==1 & (k825_k852)>=10 & (k825_k852)<=24 ~ "10 to 24 head sold",
    all_sheep_lamb_goats==1 & (k825_k852)>24 & (k825_k852)<=62 ~ "25 to 62 head sold"), 
    sheep_lamb_goats_scale = fct_relevel(sheep_lamb_goats_scale,
                                         "1 to 9 head sold",
                                         "10 to 24 head sold",
                                         "25 to 62 head sold"))
```


```{r}

meat_all <- meat 

# use local only producers 
meat <- meat %>% filter(local_only==1)

```

## Expenses per head
We calculate expenses per head as well as total expenses.

We will estimate the mean and SD and median for each expense category for each species by scale, local food market channel, and region. The only state level data we will present is for cattle in Colorado. All estimates will be presented in excel, each in a different column. 

We want to compare how total variable expenses differ for the following:

  * Direct to consumer only operations versus intermediated only operations. Although we are only providing stats for all local, we want to be able to say something about how these two types of local producers might differ in their expenses. 
  
  * For hog and pig operations that are Farrow to finish (1242) compared to Finish only (1243), do we see significant differences in their expenses?

### Summary tables 

We calculate summary stats on expenses by species and scale. For cattle operations, we also compare expenses for operations that sell direct only and intermediated only within the same scale. We cannot compare across local food market channels for hogs and pigs to compare d2c only and intermediated due to sample size issues. 

```{r}

# Define list of expenses to include
expense <- meat$variables %>% select(
  totexp, fertcseedp_head:totexp_head) %>% names()

# Define data frames by species
cattle <- meat %>% filter(
  all_cattle==1 & !is.na(cattle_scale)) %>% select(
    cattle_scale, meat_regions, all_of(expense)) %>% rename(
      scale = cattle_scale)

hogs_pigs <- meat %>% filter(
  all_hogs_pigs==1 & !is.na(hogs_pigs_scale)) %>% select(
    hogs_pigs_scale, meat_regions, all_of(expense)) %>% rename(
      scale = hogs_pigs_scale)

sheep_lamb_goats <- meat %>% filter(
  all_sheep_lamb_goats==1 & !is.na(sheep_lamb_goats_scale)) %>% select(
    sheep_lamb_goats_scale, meat_regions, all_of(expense)) %>% rename(
      scale = sheep_lamb_goats_scale)
```

### Writes summary stats for each region 

Mean, SE, median, N, largest obs., second largest ob. 

Written separately for each species, where _1 is cattle, _2 is hogs_pigs and _3 is sheep_lamb_goats. 

```{r}

species <- list(cattle, hogs_pigs, sheep_lamb_goats)

# Mean, SE, median, 
for(i in seq_along(species)){
sum <- species[[i]] %>% group_by(scale, meat_regions) %>%
  summarise(across(c(all_of(expense)), 
                   list(
                     mean = survey_mean, 
                     median = survey_median))) %>% pivot_longer(
  cols = -c(scale, meat_regions), 
  names_to = "statistic", 
  values_to = "estimate") %>% ungroup() 

# split columns and remove se for median estimate
sum <- sum %>% separate(
  statistic, c("expense", "head", "stat1", "stat2")) %>% filter(
  !((expense =="totexp" & head=="median" & !is.na(stat1)) | 
  (stat1=="median" & !is.na(stat2))))
 
sum <- sum %>% mutate(
    statistic = case_when(
      expense=="totexp" & is.na(stat1) ~ head, 
      (expense=="totexp" & is.na(stat2)) | 
        (expense!="totexp" & is.na(stat2)) ~ stat1,
      (expense =="totexp" & !is.na(stat2)) | 
       (expense!="totexp" & !is.na(stat2)) ~ stat2)) %>% select(
        meat_regions, scale, 
        expense, head, statistic, estimate) %>% unite(
  "expense", expense:head, sep = "_") %>% mutate(
    expense = str_remove(expense, "_mean"),
    expense = str_remove(expense, "_median"))

# Get N
n <- species[[i]] %>% group_by(scale, meat_regions) %>% survey_tally() %>% select(-n_se)

# Join data frames
sum <- left_join(sum, n) %>% arrange(meat_regions, scale, statistic)

# Get top 2 observations by scale for each expense category
dis <- species[[i]]$variables %>% pivot_longer(
    cols = -c(scale, meat_regions), 
    names_to = "expense") %>% group_by(
      meat_regions, scale, expense) %>% arrange(
        desc(value)) %>% top_n(2) %>% arrange(
          scale, expense) %>% select(meat_regions, everything())

# Make data wider so there is a column for second largest and largest obs. First need to add the column that says first and second largest
dis <- dis %>% group_by(scale, meat_regions, expense) %>% mutate(
  top2 = rank(desc(value), ties.method = "first")) %>% filter(
    top2<=2) %>% pivot_wider(
    names_from = top2, 
    values_from = value, 
    names_glue = "ob_{top2}") %>% rename(largest_obs = ob_1, 
                                    second_largest_obs = ob_2)

# Join with other data
final <- full_join(sum, dis, by = c("meat_regions", "scale", "expense"))

# Write results to file 
write_csv(final, str_glue("results/results_regions_{i}.csv"))

rm(sum, n, dis, final)
}

```

### Writes summary stats nationally 

Mean, SE, median, N, largest obs., second largest ob. 

Written separately for each species, where _1 is cattle, _2 is hogs_pigs and _3 is sheep_lamb_goats. 

```{r}

# Define data frames by species
cattle <- meat %>% filter(
  all_cattle==1 & !is.na(cattle_scale)) %>% select(
    cattle_scale, all_of(expense)) %>% rename(
      scale = cattle_scale)

hogs_pigs <- meat %>% filter(
  all_hogs_pigs==1 & !is.na(hogs_pigs_scale)) %>% select(
    hogs_pigs_scale, all_of(expense)) %>% rename(
      scale = hogs_pigs_scale)

sheep_lamb_goats <- meat %>% filter(
  all_sheep_lamb_goats==1 & !is.na(sheep_lamb_goats_scale)) %>% select(
    sheep_lamb_goats_scale, all_of(expense)) %>% rename(
      scale = sheep_lamb_goats_scale)

species <- list(cattle, hogs_pigs, sheep_lamb_goats)

# Mean, SE, median, 
for(i in seq_along(species)){
sum <- species[[i]] %>% group_by(scale) %>%
  summarise(across(c(all_of(expense)), 
                   list(
                     mean = survey_mean, 
                     median = survey_median))) %>% pivot_longer(
  cols = -c(scale), 
  names_to = "statistic", 
  values_to = "estimate") %>% ungroup() 

# split columns and remove se for median estimate
sum <- sum %>% separate(
  statistic, c("expense", "head", "stat1", "stat2")) %>% filter(
  !((expense =="totexp" & head=="median" & !is.na(stat1)) | 
  (expense != "totexp" & stat1=="median" & !is.na(stat2))))
 
sum <- sum %>% mutate(
    statistic = case_when(
      expense=="totexp" & is.na(stat1) ~ head, 
      (expense=="totexp" & is.na(stat2)) | 
        (expense!="totexp" & is.na(stat2)) ~ stat1,
      (expense =="totexp" & !is.na(stat2)) | 
       (expense!="totexp" & !is.na(stat2)) ~ stat2)) %>% select(
        scale, 
        expense, head, statistic, estimate) %>% unite(
  "expense", expense:head, sep = "_") %>% mutate(
    expense = str_remove(expense, "_mean"),
    expense = str_remove(expense, "_median"))

# Get N
n <- species[[i]] %>% group_by(scale) %>% survey_tally() %>% select(-n_se)

# Join data frames
sum <- left_join(sum, n) %>% arrange(scale, statistic)

# Get top 2 observations by scale for each expense category
dis <- species[[i]]$variables %>% pivot_longer(
    cols = -c(scale), 
    names_to = "expense") %>% group_by(
        scale, expense) %>% arrange(
        desc(value)) %>% top_n(2) %>% arrange(
          scale, expense) 

# Make data wider so there is a column for second largest and largest obs. First need to add the column that says first and second largest
dis <- dis %>% group_by(scale, expense) %>% mutate(
  top2 = rank(desc(value), ties.method = "first")) %>% filter(
    top2<=2) %>% pivot_wider(
    names_from = top2, 
    values_from = value, 
    names_glue = "ob_{top2}") %>% rename(largest_obs = ob_1, 
                                    second_largest_obs = ob_2)


# Join with other data
final <- full_join(sum, dis, by = c("scale", "expense"))

# Write results to file 
write_csv(final, str_glue("results/results_national_{i}.csv"))

rm(sum, n, dis, final)
}

```

### Same data for Colorado cattle
The only state/species with a large enough sample size is Colorado, so I will pull the same data as above at the state level. 

```{r}

# Define data frames by species
cattle <- meat %>% filter(
  all_cattle==1 & !is.na(cattle_scale) & state_abbr=="CO") %>% select(
    cattle_scale, all_of(expense)) %>% rename(
      scale = cattle_scale)

species <- list(cattle)

# Mean, SE, median, 
for(i in seq_along(species)){
sum <- species[[i]] %>% group_by(scale) %>%
  summarise(across(c(all_of(expense)), 
                   list(
                     mean = survey_mean, 
                     median = survey_median))) %>% pivot_longer(
  cols = -c(scale), 
  names_to = "statistic", 
  values_to = "estimate") %>% ungroup() 

# split columns and remove se for median estimate
sum <- sum %>% separate(
  statistic, c("expense", "head", "stat1", "stat2")) %>% filter(
  !((expense =="totexp" & head=="median" & !is.na(stat1)) | 
  (expense != "totexp" & stat1=="median" & !is.na(stat2))))
 
sum <- sum %>% mutate(
    statistic = case_when(
      expense=="totexp" & is.na(stat1) ~ head, 
      (expense=="totexp" & is.na(stat2)) | 
        (expense!="totexp" & is.na(stat2)) ~ stat1,
      (expense =="totexp" & !is.na(stat2)) | 
       (expense!="totexp" & !is.na(stat2)) ~ stat2)) %>% select(
        scale, 
        expense, head, statistic, estimate) %>% unite(
  "expense", expense:head, sep = "_") %>% mutate(
    expense = str_remove(expense, "_mean"),
    expense = str_remove(expense, "_median"))

# Get N
n <- species[[i]] %>% group_by(scale) %>% survey_tally() %>% select(-n_se)

# Join data frames
sum <- left_join(sum, n) %>% arrange(scale, statistic)

# Get top 2 observations by scale for each expense category
dis <- species[[i]]$variables %>% pivot_longer(
    cols = -c(scale), 
    names_to = "expense") %>% group_by(
        scale, expense) %>% arrange(
        desc(value)) %>% top_n(2) %>% arrange(
          scale, expense) 

# Make data wider so there is a column for second largest and largest obs. First need to add the column that says first and second largest
dis <- dis %>% group_by(scale, expense) %>% mutate(
  top2 = rank(desc(value), ties.method = "first")) %>% filter(
    top2<=2) %>% pivot_wider(
    names_from = top2, 
    values_from = value, 
    names_glue = "ob_{top2}") %>% rename(largest_obs = ob_1, 
                                    second_largest_obs = ob_2)


# Join with other data
final <- full_join(sum, dis, by = c("scale", "expense"))

# Write results to file 
write_csv(final, str_glue("results/results_colorado_cattle.csv"))

rm(sum, n, dis, final)
}

```

### T-tests : market channel and farrow/finish hog producers

Do expenses differ for producers selling through d2c only versus intermediated only? we won't show the numbers in the calculator, but want to show the direction and statistical significance. This is for cattle only as sample sizes are too low for the others. 

Same for farrow only and finish only hog/pig operations. 

```{r}
# T-test to compare d2c only and intermediated only
# Cattle 
meat_d2c_intermediated %>% filter(all_cattle==1) %>%
  tbl_strata(
    strata = cattle_scale, 
    .tbl_fun = ~.x %>% tbl_svysummary(
      include = c(d2c_intermediated_fct, all_of(expense)), 
      by = d2c_intermediated_fct, 
      statistic = all_continuous() ~ "{mean} ({sd}) {median}", 
      digits = list(fertc_seedp_head:otherexp_head ~ 0)) %>%
      add_p(
        test = all_continuous() ~"svy.t.test", 
        pvalue_fun = ~style_pvalue(.x, digits = 2))) %>% as_gt() %>% gt::gtsave("results/summary_tables/cattle_exp_local_compare.rtf")

# Get top 2 observations by scale for each expense category
dis <- meat$variables %>% filter(
  all_cattle==1 & !is.na(cattle_scale)) %>% select(
    cattle_scale, market_channel_fct, all_of(expense)) %>%
  rename(scale = cattle_scale) %>% 
  pivot_longer(
    cols = -c(scale, market_channel_fct), 
    names_to = "expense") %>% group_by(
      scale, market_channel_fct, expense) %>% arrange(
        desc(value)) %>% top_n(2) %>% arrange(
          scale, market_channel_fct, expense)

write_csv(dis, "results/cattle_local_dis.csv")

```

Within hog and pig operations, we see if there are differences within the same scale for farrow to finish operations compared to finish only operations. 

```{r}
# Hog and pig - comparing farrow to finish vs. finish only within each scale

meat %>% filter(all_hogs_pigs==1) %>%
  tbl_strata(
    strata = hogs_pigs_scale, 
    .tbl_fun = ~.x %>% tbl_svysummary(
      include = c(op_type_hogs_pigs, all_of(expense)), 
      by = op_type_hogs_pigs,
      type = all_of(expense) ~ "continuous",
      statistic = all_continuous() ~ "{mean} ({sd}) {median}", 
      digits = list(fertc_seedp_head:otherexp_head ~ 0)) %>% add_p(
        test = all_continuous() ~"svy.t.test", 
        pvalue_fun = ~style_pvalue(.x, digits = 2))) %>% as_gt() %>% gt::gtsave("results/summary_tables/hog_pig_optype_compare.rtf")


# Top 2 observations
# Get top 2 observations by scale for each expense category
dis <- meat$variables %>% filter(
  all_hogs_pigs==1 & !is.na(hogs_pigs_scale)) %>% select(
    hogs_pigs_scale, op_type_hogs_pigs, all_of(expense)) %>%
  rename(scale = hogs_pigs_scale) %>% 
  pivot_longer(
    cols = -c(scale, op_type_hogs_pigs), 
    names_to = "expense") %>% group_by(
      scale, op_type_hogs_pigs, expense) %>% arrange(
        desc(value)) %>% top_n(2) %>% arrange(
          scale, op_type_hogs_pigs, expense)

write_csv(dis, "results/farrow_finish_dis.csv")
```  

## Compare select costs for commodity only and local only 
Marketing expenses are different for local and commodity only producers. In order to get an idea of these differences, we do a t-test, comparing local only to commodity only, for the following expenses: labor, other, fuel/oil, and total. Also do a t-test for labor + other + fuel/oil. 

We compare at a national level and define scale categories based on the local definitions used in our samples above. 

Compare local_only==1 to local_only==0. 

```{r}

# Define list of expenses to include
meat_all <- meat_all %>% mutate(
  marketing_head = 
    case_when(all_cattle==1 ~ (labor + otherexp + fuelo)/k810,
              all_hogs_pigs==1 ~ (labor + otherexp + fuelo)/k820, 
              all_sheep_lamb_goats==1 ~ (labor + otherexp + fuelo)/(k825 + k852)))

expense <- meat_all$variables %>% select(
  labor_head, otherexp_head, fuelo_head, marketing_head, totexp_head) %>% names()

# Define data frames by species
cattle <- meat_all$variables %>% filter(
  all_cattle==1 & !is.na(cattle_scale)) %>% select(
    local_only, weight, cattle_scale, meat_regions, all_of(expense)) %>% rename(
      scale = cattle_scale) %>% mutate(species = "cattle")

hogs_pigs <- meat_all$variables %>% filter(
  all_hogs_pigs==1 & !is.na(hogs_pigs_scale)) %>% select(
    local_only, weight, hogs_pigs_scale, meat_regions, all_of(expense)) %>% rename(
      scale = hogs_pigs_scale) %>% mutate(species = "hogs_pigs")

sheep_lamb_goats <- meat_all$variables %>% filter(
  all_sheep_lamb_goats==1 & !is.na(sheep_lamb_goats_scale)) %>% select(
    local_only, weight, sheep_lamb_goats_scale, meat_regions, all_of(expense)) %>% rename(
      scale = sheep_lamb_goats_scale) %>% mutate(species = "sheep_lamb_goats")

df <- bind_rows(cattle, hogs_pigs, sheep_lamb_goats)
```

# Use weighted linear regression to do t-test. These results are the same as if we do a weighted t-test and much easier to do for many different models. 

Interpretation: positive value means local only have higher expenses, negative means commodity only have higher expenses. 


```{r}
library(broom)

# Rename scales to be 1, 2, 3 
df <- df %>% mutate(
  scale_num = case_when(
    species == "cattle" & scale =="1 head sold" | 
      species =="hogs_pigs" & scale == "1 to 5 head sold" | 
      species == "sheep_lamb_goats" & scale== "1 to 9 head sold" ~ 1,
    species == "cattle" & scale =="2 to 8 head sold" | 
      species =="hogs_pigs" & scale == "6 to 27 head sold" | 
      species == "sheep_lamb_goats" & scale== "10 to 24 head sold" ~ 2, 
    species == "cattle" & scale =="9 to 30 head sold" | 
      species =="hogs_pigs" & scale == "28 to 200 head sold" | 
      species == "sheep_lamb_goats" & scale== "25 to 62 head sold" ~ 3))

# Compare expenses - use weighted regression - write a loop for expenses 
expense <- df %>% select(
  labor_head, otherexp_head, fuelo_head, marketing_head, totexp_head) %>% names()

# Run model for each combination of species and scale for all expenses and save to a csv file
myfun <- function(y_var){
  models <- df %>% 
    group_by(species, scale_num) %>% 
    nest() %>%
    mutate(
      model = map(data, ~lm(reformulate("local_only", response = y_var), 
                            weight = weight, 
                            data = .x)), 
      results = map(model, tidy), 
      coefficients = map(results, ~select(.x, term, estimate, p.value))) %>%
    select(species, scale_num, coefficients) %>% 
    unnest(coefficients) %>% 
    mutate(y_var = y_var)
  
  return(models)
}  

all_results <- map_dfr(expense, myfun)

all_results <- all_results %>% 
  mutate(stat_sig = ifelse(p.value<0.1 & term=="local_only", 1, 0)) %>% 
  arrange(desc(stat_sig), species, scale_num, y_var)

write_csv(all_results, "results/models.csv")
```